import { IoMdNotifications } from "react-icons/io";
import "../styles/ContentHeader.css";
import { useState, useEffect } from "react";
import {
  HardwareID, // This value is now fixed and should come from stateStore
  setMode,
  setSpeed,
} from "./ListHID"; // Import from stateStore.js

const ContentHeader = () => {
  const [selectedMode, setSelectedMode] = useState(""); // Selected Mode
  const [selectedSpeed, setSelectedSpeed] = useState(""); // Selected Speed
  const api = "https://server-test-latest.onrender.com/list"; // API URL

  useEffect(() => {
    const fetchHardwareList = async () => {
      try {
        const response = await fetch(api, {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
          },
        });

        if (!response.ok) {
          throw new Error(
            `Error fetching hardware list: ${response.statusText}`
          );
        }

        const data = await response.json();

        // Assuming HardwareID comes from the server as well or is pre-defined
        if (data.length > 0) {
          const defaultItem = data[0]; // Use the first item from the list to set default values
          setSelectedMode(defaultItem.Mode);
          setSelectedSpeed(defaultItem.Speed);
          setMode(defaultItem.Mode); // Update the global state
          setSpeed(defaultItem.Speed); // Update the global state
        }
      } catch (error) {
        console.error("Failed to fetch hardware list:", error);
      }
    };

    fetchHardwareList();
  }, [api]);

  const handleSubmit = async () => {
    // Create the payload with selected values
    const payload = {
      HardwareID: HardwareID, // Use the fixed HardwareID from the stateStore
      Mode: selectedMode,
      Speed: selectedSpeed,
    };

    try {
      const response = await fetch(
        "https://server-test-latest.onrender.com/command",
        {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(payload),
        }
      );

      if (response.ok) {
        console.log("Command sent successfully");
      } else {
        throw new Error("Failed to send command");
      }
    } catch (error) {
      console.error("Error sending command:", error);
    }
  };

  return (
    <div className="content--header">
      <div className="header--activity">
        {/* Message Box */}
        <div className="message-box">
          <span>wss://server-test-v1-1.onrender.com/demo</span>
        </div>

        {/* Switch */}
        <div className="styled-wrapper">
          <label className="switch">
            <input type="checkbox" />
            <span className="slider" />
          </label>
        </div>

        {/* Hardware ID (fixed) */}
        <div className="HardwareID">
          <h2>Hardware ID: </h2>
          <div className="dropdown-wrapper">
            <input
              type="text"
              value={HardwareID}
              disabled
              className="dropdown"
            />
          </div>
        </div>

        {/* Mode Dropdown */}
        <div className="Mode">
          <h2>Mode: </h2>
          <div className="dropdown-wrapper">
            <select
              className="dropdown"
              value={selectedMode}
              onChange={(e) => setSelectedMode(e.target.value)}
            >
              <option value="SAFE">SAFE</option>
              <option value="AUTO">AUTO</option>
              <option value="MANUAL">MANUAL</option>
              <option value="OFF">OFF</option>
            </select>
          </div>
        </div>

        {/* Speed Dropdown */}
        <div className="Speed">
          <h2>Speed: </h2>
          <div className="dropdown-wrapper">
            <select
              className="dropdown"
              value={selectedSpeed}
              onChange={(e) => setSelectedSpeed(e.target.value)}
            >
              <option value="FAST">FAST</option>
              <option value="SLOW">SLOW</option>
              <option value="NORMAL">NORMAL</option>
            </select>
          </div>
        </div>

        {/* Submit Button */}
        <div className="submit-btn">
          <button onClick={handleSubmit}>Submit</button>
        </div>

        {/* Notification Icon */}
        <div className="notify">
          <IoMdNotifications className="icon" />
        </div>
      </div>
    </div>
  );
};

export default ContentHeader;
